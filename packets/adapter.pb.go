// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.12
// source: adapter.proto

package packets

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AccountRegisterRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransactionNumber    string `protobuf:"bytes,1,opt,name=TransactionNumber,proto3" json:"TransactionNumber,omitempty"`
	BankCode             string `protobuf:"bytes,2,opt,name=BankCode,proto3" json:"BankCode,omitempty"`
	BankAccountNumber    string `protobuf:"bytes,3,opt,name=BankAccountNumber,proto3" json:"BankAccountNumber,omitempty"`
	AccountName          string `protobuf:"bytes,4,opt,name=AccountName,proto3" json:"AccountName,omitempty"`
	CurrencyCode         string `protobuf:"bytes,5,opt,name=CurrencyCode,proto3" json:"CurrencyCode,omitempty"`
	BlacklistCode        string `protobuf:"bytes,6,opt,name=BlacklistCode,proto3" json:"BlacklistCode,omitempty"`
	PayRecvAccountNumber string `protobuf:"bytes,7,opt,name=PayRecvAccountNumber,proto3" json:"PayRecvAccountNumber,omitempty"`
}

func (x *AccountRegisterRequest) Reset() {
	*x = AccountRegisterRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_adapter_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountRegisterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountRegisterRequest) ProtoMessage() {}

func (x *AccountRegisterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_adapter_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountRegisterRequest.ProtoReflect.Descriptor instead.
func (*AccountRegisterRequest) Descriptor() ([]byte, []int) {
	return file_adapter_proto_rawDescGZIP(), []int{0}
}

func (x *AccountRegisterRequest) GetTransactionNumber() string {
	if x != nil {
		return x.TransactionNumber
	}
	return ""
}

func (x *AccountRegisterRequest) GetBankCode() string {
	if x != nil {
		return x.BankCode
	}
	return ""
}

func (x *AccountRegisterRequest) GetBankAccountNumber() string {
	if x != nil {
		return x.BankAccountNumber
	}
	return ""
}

func (x *AccountRegisterRequest) GetAccountName() string {
	if x != nil {
		return x.AccountName
	}
	return ""
}

func (x *AccountRegisterRequest) GetCurrencyCode() string {
	if x != nil {
		return x.CurrencyCode
	}
	return ""
}

func (x *AccountRegisterRequest) GetBlacklistCode() string {
	if x != nil {
		return x.BlacklistCode
	}
	return ""
}

func (x *AccountRegisterRequest) GetPayRecvAccountNumber() string {
	if x != nil {
		return x.PayRecvAccountNumber
	}
	return ""
}

type AccountRegisterResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status        *PStatus `protobuf:"bytes,1,opt,name=Status,proto3" json:"Status,omitempty"`
	ResultCode    string   `protobuf:"bytes,2,opt,name=ResultCode,proto3" json:"ResultCode,omitempty"`
	ResultMessage string   `protobuf:"bytes,3,opt,name=ResultMessage,proto3" json:"ResultMessage,omitempty"`
}

func (x *AccountRegisterResponse) Reset() {
	*x = AccountRegisterResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_adapter_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountRegisterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountRegisterResponse) ProtoMessage() {}

func (x *AccountRegisterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_adapter_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountRegisterResponse.ProtoReflect.Descriptor instead.
func (*AccountRegisterResponse) Descriptor() ([]byte, []int) {
	return file_adapter_proto_rawDescGZIP(), []int{1}
}

func (x *AccountRegisterResponse) GetStatus() *PStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *AccountRegisterResponse) GetResultCode() string {
	if x != nil {
		return x.ResultCode
	}
	return ""
}

func (x *AccountRegisterResponse) GetResultMessage() string {
	if x != nil {
		return x.ResultMessage
	}
	return ""
}

type AccountUpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransactionNumber    string `protobuf:"bytes,1,opt,name=TransactionNumber,proto3" json:"TransactionNumber,omitempty"`
	BankCode             string `protobuf:"bytes,2,opt,name=BankCode,proto3" json:"BankCode,omitempty"`
	BankAccountNumber    string `protobuf:"bytes,3,opt,name=BankAccountNumber,proto3" json:"BankAccountNumber,omitempty"`
	AccountName          string `protobuf:"bytes,4,opt,name=AccountName,proto3" json:"AccountName,omitempty"`
	CurrencyCode         string `protobuf:"bytes,5,opt,name=CurrencyCode,proto3" json:"CurrencyCode,omitempty"`
	BlacklistCode        string `protobuf:"bytes,6,opt,name=BlacklistCode,proto3" json:"BlacklistCode,omitempty"`
	PayRecvAccountNumber string `protobuf:"bytes,7,opt,name=PayRecvAccountNumber,proto3" json:"PayRecvAccountNumber,omitempty"`
}

func (x *AccountUpdateRequest) Reset() {
	*x = AccountUpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_adapter_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountUpdateRequest) ProtoMessage() {}

func (x *AccountUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_adapter_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountUpdateRequest.ProtoReflect.Descriptor instead.
func (*AccountUpdateRequest) Descriptor() ([]byte, []int) {
	return file_adapter_proto_rawDescGZIP(), []int{2}
}

func (x *AccountUpdateRequest) GetTransactionNumber() string {
	if x != nil {
		return x.TransactionNumber
	}
	return ""
}

func (x *AccountUpdateRequest) GetBankCode() string {
	if x != nil {
		return x.BankCode
	}
	return ""
}

func (x *AccountUpdateRequest) GetBankAccountNumber() string {
	if x != nil {
		return x.BankAccountNumber
	}
	return ""
}

func (x *AccountUpdateRequest) GetAccountName() string {
	if x != nil {
		return x.AccountName
	}
	return ""
}

func (x *AccountUpdateRequest) GetCurrencyCode() string {
	if x != nil {
		return x.CurrencyCode
	}
	return ""
}

func (x *AccountUpdateRequest) GetBlacklistCode() string {
	if x != nil {
		return x.BlacklistCode
	}
	return ""
}

func (x *AccountUpdateRequest) GetPayRecvAccountNumber() string {
	if x != nil {
		return x.PayRecvAccountNumber
	}
	return ""
}

type AccountUpdateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status        *PStatus `protobuf:"bytes,1,opt,name=Status,proto3" json:"Status,omitempty"`
	ResultCode    string   `protobuf:"bytes,2,opt,name=ResultCode,proto3" json:"ResultCode,omitempty"`
	ResultMessage string   `protobuf:"bytes,3,opt,name=ResultMessage,proto3" json:"ResultMessage,omitempty"`
}

func (x *AccountUpdateResponse) Reset() {
	*x = AccountUpdateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_adapter_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountUpdateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountUpdateResponse) ProtoMessage() {}

func (x *AccountUpdateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_adapter_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountUpdateResponse.ProtoReflect.Descriptor instead.
func (*AccountUpdateResponse) Descriptor() ([]byte, []int) {
	return file_adapter_proto_rawDescGZIP(), []int{3}
}

func (x *AccountUpdateResponse) GetStatus() *PStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *AccountUpdateResponse) GetResultCode() string {
	if x != nil {
		return x.ResultCode
	}
	return ""
}

func (x *AccountUpdateResponse) GetResultMessage() string {
	if x != nil {
		return x.ResultMessage
	}
	return ""
}

type CashoutCreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransactionNumber        string                 `protobuf:"bytes,1,opt,name=TransactionNumber,proto3" json:"TransactionNumber,omitempty"`
	HomingAccountNumber      string                 `protobuf:"bytes,2,opt,name=HomingAccountNumber,proto3" json:"HomingAccountNumber,omitempty"`
	HomingAccountName        string                 `protobuf:"bytes,3,opt,name=HomingAccountName,proto3" json:"HomingAccountName,omitempty"`
	BeneficiaryAccountNumber string                 `protobuf:"bytes,4,opt,name=BeneficiaryAccountNumber,proto3" json:"BeneficiaryAccountNumber,omitempty"`
	BeneficiaryAccountName   string                 `protobuf:"bytes,5,opt,name=BeneficiaryAccountName,proto3" json:"BeneficiaryAccountName,omitempty"`
	BankCode                 string                 `protobuf:"bytes,6,opt,name=BankCode,proto3" json:"BankCode,omitempty"`
	TargetBankCode           string                 `protobuf:"bytes,7,opt,name=TargetBankCode,proto3" json:"TargetBankCode,omitempty"`
	TransactionAmount        float64                `protobuf:"fixed64,8,opt,name=TransactionAmount,proto3" json:"TransactionAmount,omitempty"`
	CurrencyCode             string                 `protobuf:"bytes,9,opt,name=CurrencyCode,proto3" json:"CurrencyCode,omitempty"`
	TransactionAt            *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=TransactionAt,proto3" json:"TransactionAt,omitempty"`
	TransactionNote          string                 `protobuf:"bytes,11,opt,name=TransactionNote,proto3" json:"TransactionNote,omitempty"`
	PaymentNumber            string                 `protobuf:"bytes,12,opt,name=PaymentNumber,proto3" json:"PaymentNumber,omitempty"`
	PaymentMethod            string                 `protobuf:"bytes,13,opt,name=PaymentMethod,proto3" json:"PaymentMethod,omitempty"`
	PayRecvAccountNumber     string                 `protobuf:"bytes,14,opt,name=PayRecvAccountNumber,proto3" json:"PayRecvAccountNumber,omitempty"`
}

func (x *CashoutCreateRequest) Reset() {
	*x = CashoutCreateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_adapter_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CashoutCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CashoutCreateRequest) ProtoMessage() {}

func (x *CashoutCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_adapter_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CashoutCreateRequest.ProtoReflect.Descriptor instead.
func (*CashoutCreateRequest) Descriptor() ([]byte, []int) {
	return file_adapter_proto_rawDescGZIP(), []int{4}
}

func (x *CashoutCreateRequest) GetTransactionNumber() string {
	if x != nil {
		return x.TransactionNumber
	}
	return ""
}

func (x *CashoutCreateRequest) GetHomingAccountNumber() string {
	if x != nil {
		return x.HomingAccountNumber
	}
	return ""
}

func (x *CashoutCreateRequest) GetHomingAccountName() string {
	if x != nil {
		return x.HomingAccountName
	}
	return ""
}

func (x *CashoutCreateRequest) GetBeneficiaryAccountNumber() string {
	if x != nil {
		return x.BeneficiaryAccountNumber
	}
	return ""
}

func (x *CashoutCreateRequest) GetBeneficiaryAccountName() string {
	if x != nil {
		return x.BeneficiaryAccountName
	}
	return ""
}

func (x *CashoutCreateRequest) GetBankCode() string {
	if x != nil {
		return x.BankCode
	}
	return ""
}

func (x *CashoutCreateRequest) GetTargetBankCode() string {
	if x != nil {
		return x.TargetBankCode
	}
	return ""
}

func (x *CashoutCreateRequest) GetTransactionAmount() float64 {
	if x != nil {
		return x.TransactionAmount
	}
	return 0
}

func (x *CashoutCreateRequest) GetCurrencyCode() string {
	if x != nil {
		return x.CurrencyCode
	}
	return ""
}

func (x *CashoutCreateRequest) GetTransactionAt() *timestamppb.Timestamp {
	if x != nil {
		return x.TransactionAt
	}
	return nil
}

func (x *CashoutCreateRequest) GetTransactionNote() string {
	if x != nil {
		return x.TransactionNote
	}
	return ""
}

func (x *CashoutCreateRequest) GetPaymentNumber() string {
	if x != nil {
		return x.PaymentNumber
	}
	return ""
}

func (x *CashoutCreateRequest) GetPaymentMethod() string {
	if x != nil {
		return x.PaymentMethod
	}
	return ""
}

func (x *CashoutCreateRequest) GetPayRecvAccountNumber() string {
	if x != nil {
		return x.PayRecvAccountNumber
	}
	return ""
}

type CashoutCreateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status                *PStatus `protobuf:"bytes,1,opt,name=Status,proto3" json:"Status,omitempty"`
	TransactionNumber     string   `protobuf:"bytes,2,opt,name=TransactionNumber,proto3" json:"TransactionNumber,omitempty"`
	BankTransactionNumber string   `protobuf:"bytes,3,opt,name=BankTransactionNumber,proto3" json:"BankTransactionNumber,omitempty"`
	PayRecvAccountNumber  string   `protobuf:"bytes,4,opt,name=PayRecvAccountNumber,proto3" json:"PayRecvAccountNumber,omitempty"`
	ProviderId            string   `protobuf:"bytes,5,opt,name=ProviderId,proto3" json:"ProviderId,omitempty"`
	MerchantId            string   `protobuf:"bytes,6,opt,name=MerchantId,proto3" json:"MerchantId,omitempty"`
	ResultCode            string   `protobuf:"bytes,7,opt,name=ResultCode,proto3" json:"ResultCode,omitempty"`
	ResultMessage         string   `protobuf:"bytes,8,opt,name=ResultMessage,proto3" json:"ResultMessage,omitempty"`
}

func (x *CashoutCreateResponse) Reset() {
	*x = CashoutCreateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_adapter_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CashoutCreateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CashoutCreateResponse) ProtoMessage() {}

func (x *CashoutCreateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_adapter_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CashoutCreateResponse.ProtoReflect.Descriptor instead.
func (*CashoutCreateResponse) Descriptor() ([]byte, []int) {
	return file_adapter_proto_rawDescGZIP(), []int{5}
}

func (x *CashoutCreateResponse) GetStatus() *PStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *CashoutCreateResponse) GetTransactionNumber() string {
	if x != nil {
		return x.TransactionNumber
	}
	return ""
}

func (x *CashoutCreateResponse) GetBankTransactionNumber() string {
	if x != nil {
		return x.BankTransactionNumber
	}
	return ""
}

func (x *CashoutCreateResponse) GetPayRecvAccountNumber() string {
	if x != nil {
		return x.PayRecvAccountNumber
	}
	return ""
}

func (x *CashoutCreateResponse) GetProviderId() string {
	if x != nil {
		return x.ProviderId
	}
	return ""
}

func (x *CashoutCreateResponse) GetMerchantId() string {
	if x != nil {
		return x.MerchantId
	}
	return ""
}

func (x *CashoutCreateResponse) GetResultCode() string {
	if x != nil {
		return x.ResultCode
	}
	return ""
}

func (x *CashoutCreateResponse) GetResultMessage() string {
	if x != nil {
		return x.ResultMessage
	}
	return ""
}

type CashoutInquiryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransactionNumber         string                 `protobuf:"bytes,1,opt,name=TransactionNumber,proto3" json:"TransactionNumber,omitempty"`
	OriginalTransactionNumber string                 `protobuf:"bytes,2,opt,name=OriginalTransactionNumber,proto3" json:"OriginalTransactionNumber,omitempty"`
	BankCode                  string                 `protobuf:"bytes,3,opt,name=BankCode,proto3" json:"BankCode,omitempty"`
	TransactionAt             *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=TransactionAt,proto3" json:"TransactionAt,omitempty"`
}

func (x *CashoutInquiryRequest) Reset() {
	*x = CashoutInquiryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_adapter_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CashoutInquiryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CashoutInquiryRequest) ProtoMessage() {}

func (x *CashoutInquiryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_adapter_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CashoutInquiryRequest.ProtoReflect.Descriptor instead.
func (*CashoutInquiryRequest) Descriptor() ([]byte, []int) {
	return file_adapter_proto_rawDescGZIP(), []int{6}
}

func (x *CashoutInquiryRequest) GetTransactionNumber() string {
	if x != nil {
		return x.TransactionNumber
	}
	return ""
}

func (x *CashoutInquiryRequest) GetOriginalTransactionNumber() string {
	if x != nil {
		return x.OriginalTransactionNumber
	}
	return ""
}

func (x *CashoutInquiryRequest) GetBankCode() string {
	if x != nil {
		return x.BankCode
	}
	return ""
}

func (x *CashoutInquiryRequest) GetTransactionAt() *timestamppb.Timestamp {
	if x != nil {
		return x.TransactionAt
	}
	return nil
}

type CashoutInquiryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status                    *PStatus `protobuf:"bytes,1,opt,name=Status,proto3" json:"Status,omitempty"`
	TransactionNumber         string   `protobuf:"bytes,2,opt,name=TransactionNumber,proto3" json:"TransactionNumber,omitempty"`
	OriginalTransactionNumber string   `protobuf:"bytes,3,opt,name=OriginalTransactionNumber,proto3" json:"OriginalTransactionNumber,omitempty"`
	BankTransactionNumber     string   `protobuf:"bytes,4,opt,name=BankTransactionNumber,proto3" json:"BankTransactionNumber,omitempty"`
	ResultCode                string   `protobuf:"bytes,5,opt,name=ResultCode,proto3" json:"ResultCode,omitempty"`
	ResultMessage             string   `protobuf:"bytes,6,opt,name=ResultMessage,proto3" json:"ResultMessage,omitempty"`
}

func (x *CashoutInquiryResponse) Reset() {
	*x = CashoutInquiryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_adapter_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CashoutInquiryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CashoutInquiryResponse) ProtoMessage() {}

func (x *CashoutInquiryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_adapter_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CashoutInquiryResponse.ProtoReflect.Descriptor instead.
func (*CashoutInquiryResponse) Descriptor() ([]byte, []int) {
	return file_adapter_proto_rawDescGZIP(), []int{7}
}

func (x *CashoutInquiryResponse) GetStatus() *PStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *CashoutInquiryResponse) GetTransactionNumber() string {
	if x != nil {
		return x.TransactionNumber
	}
	return ""
}

func (x *CashoutInquiryResponse) GetOriginalTransactionNumber() string {
	if x != nil {
		return x.OriginalTransactionNumber
	}
	return ""
}

func (x *CashoutInquiryResponse) GetBankTransactionNumber() string {
	if x != nil {
		return x.BankTransactionNumber
	}
	return ""
}

func (x *CashoutInquiryResponse) GetResultCode() string {
	if x != nil {
		return x.ResultCode
	}
	return ""
}

func (x *CashoutInquiryResponse) GetResultMessage() string {
	if x != nil {
		return x.ResultMessage
	}
	return ""
}

type BankAccountInquiryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransactionNumber        string                 `protobuf:"bytes,1,opt,name=TransactionNumber,proto3" json:"TransactionNumber,omitempty"`
	HomingAccountNumber      string                 `protobuf:"bytes,2,opt,name=HomingAccountNumber,proto3" json:"HomingAccountNumber,omitempty"`
	BeneficiaryAccountNumber string                 `protobuf:"bytes,3,opt,name=BeneficiaryAccountNumber,proto3" json:"BeneficiaryAccountNumber,omitempty"`
	BankCode                 string                 `protobuf:"bytes,4,opt,name=BankCode,proto3" json:"BankCode,omitempty"`
	TargetBankCode           string                 `protobuf:"bytes,5,opt,name=TargetBankCode,proto3" json:"TargetBankCode,omitempty"`
	TransactionAt            *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=TransactionAt,proto3" json:"TransactionAt,omitempty"`
	PaymentMethod            string                 `protobuf:"bytes,7,opt,name=PaymentMethod,proto3" json:"PaymentMethod,omitempty"`
	PayRecvAccountNumber     string                 `protobuf:"bytes,8,opt,name=PayRecvAccountNumber,proto3" json:"PayRecvAccountNumber,omitempty"`
}

func (x *BankAccountInquiryRequest) Reset() {
	*x = BankAccountInquiryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_adapter_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BankAccountInquiryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BankAccountInquiryRequest) ProtoMessage() {}

func (x *BankAccountInquiryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_adapter_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BankAccountInquiryRequest.ProtoReflect.Descriptor instead.
func (*BankAccountInquiryRequest) Descriptor() ([]byte, []int) {
	return file_adapter_proto_rawDescGZIP(), []int{8}
}

func (x *BankAccountInquiryRequest) GetTransactionNumber() string {
	if x != nil {
		return x.TransactionNumber
	}
	return ""
}

func (x *BankAccountInquiryRequest) GetHomingAccountNumber() string {
	if x != nil {
		return x.HomingAccountNumber
	}
	return ""
}

func (x *BankAccountInquiryRequest) GetBeneficiaryAccountNumber() string {
	if x != nil {
		return x.BeneficiaryAccountNumber
	}
	return ""
}

func (x *BankAccountInquiryRequest) GetBankCode() string {
	if x != nil {
		return x.BankCode
	}
	return ""
}

func (x *BankAccountInquiryRequest) GetTargetBankCode() string {
	if x != nil {
		return x.TargetBankCode
	}
	return ""
}

func (x *BankAccountInquiryRequest) GetTransactionAt() *timestamppb.Timestamp {
	if x != nil {
		return x.TransactionAt
	}
	return nil
}

func (x *BankAccountInquiryRequest) GetPaymentMethod() string {
	if x != nil {
		return x.PaymentMethod
	}
	return ""
}

func (x *BankAccountInquiryRequest) GetPayRecvAccountNumber() string {
	if x != nil {
		return x.PayRecvAccountNumber
	}
	return ""
}

type BankAccountInquiryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status                 *PStatus `protobuf:"bytes,1,opt,name=Status,proto3" json:"Status,omitempty"`
	TransactionNumber      string   `protobuf:"bytes,2,opt,name=TransactionNumber,proto3" json:"TransactionNumber,omitempty"`
	BeneficiaryAccountName string   `protobuf:"bytes,3,opt,name=BeneficiaryAccountName,proto3" json:"BeneficiaryAccountName,omitempty"`
	BankCode               string   `protobuf:"bytes,4,opt,name=BankCode,proto3" json:"BankCode,omitempty"`
	BranchCode             string   `protobuf:"bytes,5,opt,name=BranchCode,proto3" json:"BranchCode,omitempty"`
}

func (x *BankAccountInquiryResponse) Reset() {
	*x = BankAccountInquiryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_adapter_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BankAccountInquiryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BankAccountInquiryResponse) ProtoMessage() {}

func (x *BankAccountInquiryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_adapter_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BankAccountInquiryResponse.ProtoReflect.Descriptor instead.
func (*BankAccountInquiryResponse) Descriptor() ([]byte, []int) {
	return file_adapter_proto_rawDescGZIP(), []int{9}
}

func (x *BankAccountInquiryResponse) GetStatus() *PStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *BankAccountInquiryResponse) GetTransactionNumber() string {
	if x != nil {
		return x.TransactionNumber
	}
	return ""
}

func (x *BankAccountInquiryResponse) GetBeneficiaryAccountName() string {
	if x != nil {
		return x.BeneficiaryAccountName
	}
	return ""
}

func (x *BankAccountInquiryResponse) GetBankCode() string {
	if x != nil {
		return x.BankCode
	}
	return ""
}

func (x *BankAccountInquiryResponse) GetBranchCode() string {
	if x != nil {
		return x.BranchCode
	}
	return ""
}

type MerchantAccountInquiryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransactionNumber    string                 `protobuf:"bytes,1,opt,name=TransactionNumber,proto3" json:"TransactionNumber,omitempty"`
	BankCode             string                 `protobuf:"bytes,2,opt,name=BankCode,proto3" json:"BankCode,omitempty"`
	TransactionAt        *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=TransactionAt,proto3" json:"TransactionAt,omitempty"`
	PayRecvAccountNumber string                 `protobuf:"bytes,4,opt,name=PayRecvAccountNumber,proto3" json:"PayRecvAccountNumber,omitempty"`
}

func (x *MerchantAccountInquiryRequest) Reset() {
	*x = MerchantAccountInquiryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_adapter_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MerchantAccountInquiryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MerchantAccountInquiryRequest) ProtoMessage() {}

func (x *MerchantAccountInquiryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_adapter_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MerchantAccountInquiryRequest.ProtoReflect.Descriptor instead.
func (*MerchantAccountInquiryRequest) Descriptor() ([]byte, []int) {
	return file_adapter_proto_rawDescGZIP(), []int{10}
}

func (x *MerchantAccountInquiryRequest) GetTransactionNumber() string {
	if x != nil {
		return x.TransactionNumber
	}
	return ""
}

func (x *MerchantAccountInquiryRequest) GetBankCode() string {
	if x != nil {
		return x.BankCode
	}
	return ""
}

func (x *MerchantAccountInquiryRequest) GetTransactionAt() *timestamppb.Timestamp {
	if x != nil {
		return x.TransactionAt
	}
	return nil
}

func (x *MerchantAccountInquiryRequest) GetPayRecvAccountNumber() string {
	if x != nil {
		return x.PayRecvAccountNumber
	}
	return ""
}

type MerchantAccountInquiryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status            *PStatus `protobuf:"bytes,1,opt,name=Status,proto3" json:"Status,omitempty"`
	TransactionNumber string   `protobuf:"bytes,2,opt,name=TransactionNumber,proto3" json:"TransactionNumber,omitempty"`
	AccountNumber     string   `protobuf:"bytes,3,opt,name=AccountNumber,proto3" json:"AccountNumber,omitempty"`
	TotalAmount       float64  `protobuf:"fixed64,4,opt,name=TotalAmount,proto3" json:"TotalAmount,omitempty"`
	GlAmount          float64  `protobuf:"fixed64,5,opt,name=GlAmount,proto3" json:"GlAmount,omitempty"`
	CurrencyCode      string   `protobuf:"bytes,6,opt,name=CurrencyCode,proto3" json:"CurrencyCode,omitempty"`
}

func (x *MerchantAccountInquiryResponse) Reset() {
	*x = MerchantAccountInquiryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_adapter_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MerchantAccountInquiryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MerchantAccountInquiryResponse) ProtoMessage() {}

func (x *MerchantAccountInquiryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_adapter_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MerchantAccountInquiryResponse.ProtoReflect.Descriptor instead.
func (*MerchantAccountInquiryResponse) Descriptor() ([]byte, []int) {
	return file_adapter_proto_rawDescGZIP(), []int{11}
}

func (x *MerchantAccountInquiryResponse) GetStatus() *PStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *MerchantAccountInquiryResponse) GetTransactionNumber() string {
	if x != nil {
		return x.TransactionNumber
	}
	return ""
}

func (x *MerchantAccountInquiryResponse) GetAccountNumber() string {
	if x != nil {
		return x.AccountNumber
	}
	return ""
}

func (x *MerchantAccountInquiryResponse) GetTotalAmount() float64 {
	if x != nil {
		return x.TotalAmount
	}
	return 0
}

func (x *MerchantAccountInquiryResponse) GetGlAmount() float64 {
	if x != nil {
		return x.GlAmount
	}
	return 0
}

func (x *MerchantAccountInquiryResponse) GetCurrencyCode() string {
	if x != nil {
		return x.CurrencyCode
	}
	return ""
}

type QrCodeInquiryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransactionNumber string  `protobuf:"bytes,1,opt,name=TransactionNumber,proto3" json:"TransactionNumber,omitempty"`
	BankCode          string  `protobuf:"bytes,2,opt,name=BankCode,proto3" json:"BankCode,omitempty"`
	BankAccountNumber string  `protobuf:"bytes,3,opt,name=BankAccountNumber,proto3" json:"BankAccountNumber,omitempty"`
	CurrencyCode      string  `protobuf:"bytes,4,opt,name=CurrencyCode,proto3" json:"CurrencyCode,omitempty"`
	TransactionAmount float64 `protobuf:"fixed64,5,opt,name=TransactionAmount,proto3" json:"TransactionAmount,omitempty"`
	TransactionNote   string  `protobuf:"bytes,6,opt,name=TransactionNote,proto3" json:"TransactionNote,omitempty"`
}

func (x *QrCodeInquiryRequest) Reset() {
	*x = QrCodeInquiryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_adapter_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QrCodeInquiryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QrCodeInquiryRequest) ProtoMessage() {}

func (x *QrCodeInquiryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_adapter_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QrCodeInquiryRequest.ProtoReflect.Descriptor instead.
func (*QrCodeInquiryRequest) Descriptor() ([]byte, []int) {
	return file_adapter_proto_rawDescGZIP(), []int{12}
}

func (x *QrCodeInquiryRequest) GetTransactionNumber() string {
	if x != nil {
		return x.TransactionNumber
	}
	return ""
}

func (x *QrCodeInquiryRequest) GetBankCode() string {
	if x != nil {
		return x.BankCode
	}
	return ""
}

func (x *QrCodeInquiryRequest) GetBankAccountNumber() string {
	if x != nil {
		return x.BankAccountNumber
	}
	return ""
}

func (x *QrCodeInquiryRequest) GetCurrencyCode() string {
	if x != nil {
		return x.CurrencyCode
	}
	return ""
}

func (x *QrCodeInquiryRequest) GetTransactionAmount() float64 {
	if x != nil {
		return x.TransactionAmount
	}
	return 0
}

func (x *QrCodeInquiryRequest) GetTransactionNote() string {
	if x != nil {
		return x.TransactionNote
	}
	return ""
}

type QrCodeInquiryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status *PStatus `protobuf:"bytes,1,opt,name=Status,proto3" json:"Status,omitempty"`
	QrCode string   `protobuf:"bytes,2,opt,name=QrCode,proto3" json:"QrCode,omitempty"`
}

func (x *QrCodeInquiryResponse) Reset() {
	*x = QrCodeInquiryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_adapter_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QrCodeInquiryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QrCodeInquiryResponse) ProtoMessage() {}

func (x *QrCodeInquiryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_adapter_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QrCodeInquiryResponse.ProtoReflect.Descriptor instead.
func (*QrCodeInquiryResponse) Descriptor() ([]byte, []int) {
	return file_adapter_proto_rawDescGZIP(), []int{13}
}

func (x *QrCodeInquiryResponse) GetStatus() *PStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *QrCodeInquiryResponse) GetQrCode() string {
	if x != nil {
		return x.QrCode
	}
	return ""
}

var File_adapter_proto protoreflect.FileDescriptor

var file_adapter_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x61, 0x64, 0x61, 0x70, 0x74, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x07, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x1a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xb0, 0x02, 0x0a, 0x16, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x2c, 0x0a, 0x11, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x12, 0x1a, 0x0a, 0x08, 0x42, 0x61, 0x6e, 0x6b, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x42, 0x61, 0x6e, 0x6b, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x2c, 0x0a, 0x11,
	0x42, 0x61, 0x6e, 0x6b, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x42, 0x61, 0x6e, 0x6b, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c,
	0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x24, 0x0a, 0x0d, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x6c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x64,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x6c, 0x69,
	0x73, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x32, 0x0a, 0x14, 0x50, 0x61, 0x79, 0x52, 0x65, 0x63,
	0x76, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x50, 0x61, 0x79, 0x52, 0x65, 0x63, 0x76, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x89, 0x01, 0x0a, 0x17, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73,
	0x2e, 0x50, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x1e, 0x0a, 0x0a, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x24, 0x0a, 0x0d, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xae, 0x02, 0x0a, 0x14, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x2c, 0x0a, 0x11, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1a, 0x0a,
	0x08, 0x42, 0x61, 0x6e, 0x6b, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x42, 0x61, 0x6e, 0x6b, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x2c, 0x0a, 0x11, 0x42, 0x61, 0x6e,
	0x6b, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x42, 0x61, 0x6e, 0x6b, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x43, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x63, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x24, 0x0a,
	0x0d, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x6c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x6c, 0x69, 0x73, 0x74, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x32, 0x0a, 0x14, 0x50, 0x61, 0x79, 0x52, 0x65, 0x63, 0x76, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x14, 0x50, 0x61, 0x79, 0x52, 0x65, 0x63, 0x76, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x87, 0x01, 0x0a, 0x15, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x28, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x10, 0x2e, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x2e, 0x50, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x22, 0x9a, 0x05, 0x0a, 0x14, 0x43, 0x61, 0x73, 0x68, 0x6f, 0x75, 0x74, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x11, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x30, 0x0a, 0x13, 0x48, 0x6f, 0x6d, 0x69,
	0x6e, 0x67, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x48, 0x6f, 0x6d, 0x69, 0x6e, 0x67, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x2c, 0x0a, 0x11, 0x48, 0x6f,
	0x6d, 0x69, 0x6e, 0x67, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x48, 0x6f, 0x6d, 0x69, 0x6e, 0x67, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x3a, 0x0a, 0x18, 0x42, 0x65, 0x6e, 0x65,
	0x66, 0x69, 0x63, 0x69, 0x61, 0x72, 0x79, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x18, 0x42, 0x65, 0x6e, 0x65,
	0x66, 0x69, 0x63, 0x69, 0x61, 0x72, 0x79, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x12, 0x36, 0x0a, 0x16, 0x42, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x63, 0x69,
	0x61, 0x72, 0x79, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x16, 0x42, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x63, 0x69, 0x61, 0x72,
	0x79, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x42, 0x61, 0x6e, 0x6b, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x42, 0x61, 0x6e, 0x6b, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x54, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x42, 0x61, 0x6e, 0x6b, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x42, 0x61, 0x6e, 0x6b, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x2c, 0x0a, 0x11, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x01, 0x52, 0x11, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x22,
	0x0a, 0x0c, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x40, 0x0a, 0x0d, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x41, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0d, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x41, 0x74, 0x12, 0x28, 0x0a, 0x0f, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x4e, 0x6f, 0x74, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x6f, 0x74, 0x65, 0x12, 0x24,
	0x0a, 0x0d, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x12, 0x24, 0x0a, 0x0d, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d,
	0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x50, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x32, 0x0a, 0x14, 0x50, 0x61,
	0x79, 0x52, 0x65, 0x63, 0x76, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x50, 0x61, 0x79, 0x52, 0x65, 0x63,
	0x76, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0xdf,
	0x02, 0x0a, 0x15, 0x43, 0x61, 0x73, 0x68, 0x6f, 0x75, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x61, 0x63, 0x6b, 0x65,
	0x74, 0x73, 0x2e, 0x50, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x2c, 0x0a, 0x11, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x12, 0x34, 0x0a, 0x15, 0x42, 0x61, 0x6e, 0x6b, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x15, 0x42, 0x61, 0x6e, 0x6b, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x32, 0x0a, 0x14, 0x50, 0x61, 0x79, 0x52, 0x65, 0x63,
	0x76, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x50, 0x61, 0x79, 0x52, 0x65, 0x63, 0x76, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x50, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x4d, 0x65,
	0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x22, 0xe1, 0x01, 0x0a, 0x15, 0x43, 0x61, 0x73, 0x68, 0x6f, 0x75, 0x74, 0x49, 0x6e, 0x71, 0x75,
	0x69, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x11, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x3c, 0x0a, 0x19, 0x4f, 0x72, 0x69, 0x67,
	0x69, 0x6e, 0x61, 0x6c, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x19, 0x4f, 0x72, 0x69,
	0x67, 0x69, 0x6e, 0x61, 0x6c, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x42, 0x61, 0x6e, 0x6b, 0x43, 0x6f,
	0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x42, 0x61, 0x6e, 0x6b, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x40, 0x0a, 0x0d, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x41, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0d, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x41, 0x74, 0x22, 0xaa, 0x02, 0x0a, 0x16, 0x43, 0x61, 0x73, 0x68, 0x6f, 0x75, 0x74,
	0x49, 0x6e, 0x71, 0x75, 0x69, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x28, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x10, 0x2e, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x2e, 0x50, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2c, 0x0a, 0x11, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x3c, 0x0a, 0x19, 0x4f, 0x72, 0x69, 0x67, 0x69,
	0x6e, 0x61, 0x6c, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x19, 0x4f, 0x72, 0x69, 0x67,
	0x69, 0x6e, 0x61, 0x6c, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x34, 0x0a, 0x15, 0x42, 0x61, 0x6e, 0x6b, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x42, 0x61, 0x6e, 0x6b, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x22, 0x97, 0x03, 0x0a, 0x19, 0x42, 0x61, 0x6e, 0x6b, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x49, 0x6e, 0x71, 0x75, 0x69, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x2c, 0x0a, 0x11, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x30, 0x0a,
	0x13, 0x48, 0x6f, 0x6d, 0x69, 0x6e, 0x67, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x48, 0x6f, 0x6d, 0x69,
	0x6e, 0x67, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12,
	0x3a, 0x0a, 0x18, 0x42, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x63, 0x69, 0x61, 0x72, 0x79, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x18, 0x42, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x63, 0x69, 0x61, 0x72, 0x79, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x42,
	0x61, 0x6e, 0x6b, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x42,
	0x61, 0x6e, 0x6b, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x54, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x42, 0x61, 0x6e, 0x6b, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x42, 0x61, 0x6e, 0x6b, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x40, 0x0a, 0x0d, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x74,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x0d, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41,
	0x74, 0x12, 0x24, 0x0a, 0x0d, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68,
	0x6f, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x32, 0x0a, 0x14, 0x50, 0x61, 0x79, 0x52, 0x65,
	0x63, 0x76, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x50, 0x61, 0x79, 0x52, 0x65, 0x63, 0x76, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0xe8, 0x01, 0x0a, 0x1a,
	0x42, 0x61, 0x6e, 0x6b, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x71, 0x75, 0x69,
	0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x06, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x61, 0x63,
	0x6b, 0x65, 0x74, 0x73, 0x2e, 0x50, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x2c, 0x0a, 0x11, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x11, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x12, 0x36, 0x0a, 0x16, 0x42, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x63, 0x69, 0x61, 0x72,
	0x79, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x16, 0x42, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x63, 0x69, 0x61, 0x72, 0x79, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x42, 0x61,
	0x6e, 0x6b, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x42, 0x61,
	0x6e, 0x6b, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68,
	0x43, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x42, 0x72, 0x61, 0x6e,
	0x63, 0x68, 0x43, 0x6f, 0x64, 0x65, 0x22, 0xdf, 0x01, 0x0a, 0x1d, 0x4d, 0x65, 0x72, 0x63, 0x68,
	0x61, 0x6e, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x71, 0x75, 0x69, 0x72,
	0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x11, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x11, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x42, 0x61, 0x6e, 0x6b, 0x43, 0x6f,
	0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x42, 0x61, 0x6e, 0x6b, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x40, 0x0a, 0x0d, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x41, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0d, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x41, 0x74, 0x12, 0x32, 0x0a, 0x14, 0x50, 0x61, 0x79, 0x52, 0x65, 0x63, 0x76, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x14, 0x50, 0x61, 0x79, 0x52, 0x65, 0x63, 0x76, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x80, 0x02, 0x0a, 0x1e, 0x4d, 0x65, 0x72,
	0x63, 0x68, 0x61, 0x6e, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x71, 0x75,
	0x69, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x06, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x61,
	0x63, 0x6b, 0x65, 0x74, 0x73, 0x2e, 0x50, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2c, 0x0a, 0x11, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x11, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x12, 0x24, 0x0a, 0x0d, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x54, 0x6f, 0x74,
	0x61, 0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b,
	0x54, 0x6f, 0x74, 0x61, 0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x47,
	0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x47,
	0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x43, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x63, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x43,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x8a, 0x02, 0x0a, 0x14,
	0x51, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x71, 0x75, 0x69, 0x72, 0x79, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x11, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x11, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x42, 0x61, 0x6e, 0x6b, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x42, 0x61, 0x6e, 0x6b, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x2c,
	0x0a, 0x11, 0x42, 0x61, 0x6e, 0x6b, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x42, 0x61, 0x6e, 0x6b, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x22, 0x0a, 0x0c,
	0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x2c, 0x0a, 0x11, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x11, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x28,
	0x0a, 0x0f, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x6f, 0x74,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x6f, 0x74, 0x65, 0x22, 0x59, 0x0a, 0x15, 0x51, 0x72, 0x43, 0x6f,
	0x64, 0x65, 0x49, 0x6e, 0x71, 0x75, 0x69, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x28, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x10, 0x2e, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x2e, 0x50, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x51,
	0x72, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x51, 0x72, 0x43,
	0x6f, 0x64, 0x65, 0x32, 0xfe, 0x04, 0x0a, 0x07, 0x41, 0x64, 0x61, 0x70, 0x74, 0x65, 0x72, 0x12,
	0x5a, 0x0a, 0x13, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x2e, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73,
	0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74,
	0x73, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x50, 0x0a, 0x0d, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x1d, 0x2e, 0x70,
	0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x70, 0x61,
	0x63, 0x6b, 0x65, 0x74, 0x73, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x50, 0x0a,
	0x0d, 0x43, 0x61, 0x73, 0x68, 0x6f, 0x75, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x1d,
	0x2e, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x2e, 0x43, 0x61, 0x73, 0x68, 0x6f, 0x75, 0x74,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e,
	0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x2e, 0x43, 0x61, 0x73, 0x68, 0x6f, 0x75, 0x74, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x53, 0x0a, 0x0e, 0x43, 0x61, 0x73, 0x68, 0x6f, 0x75, 0x74, 0x49, 0x6e, 0x71, 0x75, 0x69, 0x72,
	0x79, 0x12, 0x1e, 0x2e, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x2e, 0x43, 0x61, 0x73, 0x68,
	0x6f, 0x75, 0x74, 0x49, 0x6e, 0x71, 0x75, 0x69, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1f, 0x2e, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x2e, 0x43, 0x61, 0x73, 0x68,
	0x6f, 0x75, 0x74, 0x49, 0x6e, 0x71, 0x75, 0x69, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x5f, 0x0a, 0x12, 0x42, 0x61, 0x6e, 0x6b, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x49, 0x6e, 0x71, 0x75, 0x69, 0x72, 0x79, 0x12, 0x22, 0x2e, 0x70, 0x61, 0x63,
	0x6b, 0x65, 0x74, 0x73, 0x2e, 0x42, 0x61, 0x6e, 0x6b, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x49, 0x6e, 0x71, 0x75, 0x69, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23,
	0x2e, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x2e, 0x42, 0x61, 0x6e, 0x6b, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x71, 0x75, 0x69, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6b, 0x0a, 0x16, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e,
	0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x71, 0x75, 0x69, 0x72, 0x79, 0x12,
	0x26, 0x2e, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x2e, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61,
	0x6e, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x71, 0x75, 0x69, 0x72, 0x79,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74,
	0x73, 0x2e, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x49, 0x6e, 0x71, 0x75, 0x69, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x50, 0x0a, 0x0d, 0x51, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x71, 0x75,
	0x69, 0x72, 0x79, 0x12, 0x1d, 0x2e, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x2e, 0x51, 0x72,
	0x43, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x71, 0x75, 0x69, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x2e, 0x51, 0x72, 0x43,
	0x6f, 0x64, 0x65, 0x49, 0x6e, 0x71, 0x75, 0x69, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x42, 0x0b, 0x5a, 0x09, 0x2e, 0x2f, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74,
	0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_adapter_proto_rawDescOnce sync.Once
	file_adapter_proto_rawDescData = file_adapter_proto_rawDesc
)

func file_adapter_proto_rawDescGZIP() []byte {
	file_adapter_proto_rawDescOnce.Do(func() {
		file_adapter_proto_rawDescData = protoimpl.X.CompressGZIP(file_adapter_proto_rawDescData)
	})
	return file_adapter_proto_rawDescData
}

var file_adapter_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_adapter_proto_goTypes = []interface{}{
	(*AccountRegisterRequest)(nil),         // 0: packets.AccountRegisterRequest
	(*AccountRegisterResponse)(nil),        // 1: packets.AccountRegisterResponse
	(*AccountUpdateRequest)(nil),           // 2: packets.AccountUpdateRequest
	(*AccountUpdateResponse)(nil),          // 3: packets.AccountUpdateResponse
	(*CashoutCreateRequest)(nil),           // 4: packets.CashoutCreateRequest
	(*CashoutCreateResponse)(nil),          // 5: packets.CashoutCreateResponse
	(*CashoutInquiryRequest)(nil),          // 6: packets.CashoutInquiryRequest
	(*CashoutInquiryResponse)(nil),         // 7: packets.CashoutInquiryResponse
	(*BankAccountInquiryRequest)(nil),      // 8: packets.BankAccountInquiryRequest
	(*BankAccountInquiryResponse)(nil),     // 9: packets.BankAccountInquiryResponse
	(*MerchantAccountInquiryRequest)(nil),  // 10: packets.MerchantAccountInquiryRequest
	(*MerchantAccountInquiryResponse)(nil), // 11: packets.MerchantAccountInquiryResponse
	(*QrCodeInquiryRequest)(nil),           // 12: packets.QrCodeInquiryRequest
	(*QrCodeInquiryResponse)(nil),          // 13: packets.QrCodeInquiryResponse
	(*PStatus)(nil),                        // 14: packets.PStatus
	(*timestamppb.Timestamp)(nil),          // 15: google.protobuf.Timestamp
}
var file_adapter_proto_depIdxs = []int32{
	14, // 0: packets.AccountRegisterResponse.Status:type_name -> packets.PStatus
	14, // 1: packets.AccountUpdateResponse.Status:type_name -> packets.PStatus
	15, // 2: packets.CashoutCreateRequest.TransactionAt:type_name -> google.protobuf.Timestamp
	14, // 3: packets.CashoutCreateResponse.Status:type_name -> packets.PStatus
	15, // 4: packets.CashoutInquiryRequest.TransactionAt:type_name -> google.protobuf.Timestamp
	14, // 5: packets.CashoutInquiryResponse.Status:type_name -> packets.PStatus
	15, // 6: packets.BankAccountInquiryRequest.TransactionAt:type_name -> google.protobuf.Timestamp
	14, // 7: packets.BankAccountInquiryResponse.Status:type_name -> packets.PStatus
	15, // 8: packets.MerchantAccountInquiryRequest.TransactionAt:type_name -> google.protobuf.Timestamp
	14, // 9: packets.MerchantAccountInquiryResponse.Status:type_name -> packets.PStatus
	14, // 10: packets.QrCodeInquiryResponse.Status:type_name -> packets.PStatus
	0,  // 11: packets.Adapter.AccountRegistration:input_type -> packets.AccountRegisterRequest
	2,  // 12: packets.Adapter.AccountUpdate:input_type -> packets.AccountUpdateRequest
	4,  // 13: packets.Adapter.CashoutCreate:input_type -> packets.CashoutCreateRequest
	6,  // 14: packets.Adapter.CashoutInquiry:input_type -> packets.CashoutInquiryRequest
	8,  // 15: packets.Adapter.BankAccountInquiry:input_type -> packets.BankAccountInquiryRequest
	10, // 16: packets.Adapter.MerchantAccountInquiry:input_type -> packets.MerchantAccountInquiryRequest
	12, // 17: packets.Adapter.QrCodeInquiry:input_type -> packets.QrCodeInquiryRequest
	1,  // 18: packets.Adapter.AccountRegistration:output_type -> packets.AccountRegisterResponse
	3,  // 19: packets.Adapter.AccountUpdate:output_type -> packets.AccountUpdateResponse
	5,  // 20: packets.Adapter.CashoutCreate:output_type -> packets.CashoutCreateResponse
	7,  // 21: packets.Adapter.CashoutInquiry:output_type -> packets.CashoutInquiryResponse
	9,  // 22: packets.Adapter.BankAccountInquiry:output_type -> packets.BankAccountInquiryResponse
	11, // 23: packets.Adapter.MerchantAccountInquiry:output_type -> packets.MerchantAccountInquiryResponse
	13, // 24: packets.Adapter.QrCodeInquiry:output_type -> packets.QrCodeInquiryResponse
	18, // [18:25] is the sub-list for method output_type
	11, // [11:18] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_adapter_proto_init() }
func file_adapter_proto_init() {
	if File_adapter_proto != nil {
		return
	}
	file_common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_adapter_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountRegisterRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_adapter_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountRegisterResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_adapter_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountUpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_adapter_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountUpdateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_adapter_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CashoutCreateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_adapter_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CashoutCreateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_adapter_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CashoutInquiryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_adapter_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CashoutInquiryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_adapter_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BankAccountInquiryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_adapter_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BankAccountInquiryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_adapter_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MerchantAccountInquiryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_adapter_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MerchantAccountInquiryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_adapter_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QrCodeInquiryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_adapter_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QrCodeInquiryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_adapter_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_adapter_proto_goTypes,
		DependencyIndexes: file_adapter_proto_depIdxs,
		MessageInfos:      file_adapter_proto_msgTypes,
	}.Build()
	File_adapter_proto = out.File
	file_adapter_proto_rawDesc = nil
	file_adapter_proto_goTypes = nil
	file_adapter_proto_depIdxs = nil
}
